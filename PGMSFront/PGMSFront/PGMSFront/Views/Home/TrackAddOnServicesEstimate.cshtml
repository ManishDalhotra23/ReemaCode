@model PGMSFront.Models.CommonModel
@{
    if (Convert.ToString(Session["SessBookingType"]).ToUpper() == "TRACK")
    {
        ViewBag.Title = "Basic Estimate - TRACK";
        Layout = "~/Views/Shared/_LayoutQuickEstimate.cshtml";
    }
    else
    {
        ViewBag.Title = "Basic Estimate - LAB";
        Layout = "~/Views/Shared/_LayoutQuickEstimateLab.cshtml";
    }
}

<style>
    .table > tbody > tr > td {
        padding: 2px 8px !important;
        cursor: pointer !important;
    }

    .card {
        margin-bottom: 0px !important;
        margin-top: 25px !important;
    }

    .bootstrap-select {
        margin-top: 16px !important;
    }

    .main-panel > .content {
        margin-top: 0 !important;
    }

    .card .card-body {
        padding: 0px 5px 5px 5px !important;
    }

    #AddMoreTR {
        background: lightblue;
    }
</style>
<div class="content">
    @using (Html.BeginForm(new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            @Html.Partial("~/Views/Home/QuickEstimateHeader.cshtml")

            <div class="row">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">
                            @if (Model.StatusPropId == 40 && Model.WorkFlowId == 216 || Model.WorkFlowId == 219)
                            {
                                <button type="button" class="btn btn-fill btn-rose btn-sm" onclick="AddMore()" id="btnAdd">Add More</button>
                            }
                            <span class="pull-right">
                                <label class="card-title">Add-On Services Count : </label> <label class="card-title" id="lblWSCount"></label>
                            </span>
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-bordered">
                                        <thead class=" text-primary">
                                            <tr>
                                                <th width="22%">Description <span style="color: red">*</span></th>
                                                @*<th width="12%" style="text-align:center">Date</th>*@
                                                <th width="12%" style="text-align:left">Unit</th>
                                                <th width="12%" style="text-align:right">Billing Qty <span style="color: red">*</span></th>
                                                @if ((Model.WorkFlowId == 218 || Model.WorkFlowId == 221) && Model.StatusPropId == 40)
                                                {
                                                    <th width="12%" style="text-align:right;">Rate</th>
                                                    @*<th width="10%" style="text-align:right;">Amount</th>*@
                                                }
                                                else
                                                {
                                                    <th width="12%" style="text-align:right; display:none">Rate</th>
                                                    @*<th width="10%" style="text-align:right; display:none">Amount</th>*@
                                                }
                                                <th width="30%">Remark</th>
                                                @if ((Model.WorkFlowId == 216 || Model.WorkFlowId == 219) && Model.StatusPropId == 40)
                                                {
                                                    <th width="12%" class="text-center">Action</th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody id="tbodyWS">
                                            <tr id="AddMoreTR" style="display: none;">
                                                <td>
                                                    <select class="form-control" id="ServiceType" onchange="SetRateUnit()">
                                                        <option value="0">-Select-</option>
                                                        @foreach (var itm in ViewBag.ServiveLookup)
                                                        {
                                                            <option value='@itm.Value'>@itm.Text</option>
                                                        }
                                                    </select>
                                                </td>
                                                @*<td><input id="Date" type="text" style="text-align:center" onblur="SetRateUnit()" class="form-control datetimepicker"></td>*@
                                                <td><input id="Unit" disabled="disabled" style="text-align: left" type="text" class="form-control" value=""></td>
                                                <td><input id="Consumption"  type="text" style="text-align:right" onchange="CalculateAmount()" onkeypress='return CheckIsNumeric(event,this);' class="form-control" value=""></td>
                                                @if (Model.WorkFlowId == 218 && Model.StatusPropId == 40)
                                                {
                                                    <td style="text-align:right;"><input id="Rate" disabled="disabled" style="text-align:right;" type="text" class="form-control" value=""></td>
                                                    <td style="text-align:right;"><input id="Amount" disabled="disabled" type="text" style="text-align:right;" class="form-control" value=""></td>
                                                }
                                                else
                                                {
                                                    <td style="text-align:right; display:none"><input id="Rate" disabled="disabled" style="text-align:right; display:none" type="text" class="form-control" value=""></td>
                                                    <td style="text-align:right; display:none"><input id="Amount" disabled="disabled" type="text" style="text-align:right; display:none" class="form-control" value=""></td>
                                                }
                                                <td><textarea id="Remark" class="form-control"></textarea></td>
                                                <td class='td-actions text-center'>
                                                    <button type='button' rel='tooltip' id="btnSave" onclick="return AddOnServicesSave()" class='btn btn-info' data-original-title='' title=''><i class='material-icons'>save</i></button>
                                                    <button type='button' rel='tooltip' class='btn btn-danger' data-original-title='' title='' onclick="AddMoreCancel()"><i class='material-icons'>close</i></button>
                                                </td>
                                                <td style='display:none'><input type='hidden' id='hdnUOMPropId' /> </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <br />
                        <table Style="width:100%">
                            <tr>
                                <td Style="width:10%;text-align:left">
                                    <input type="submit" id="btnPrev" name="btnPrevNext" value="Prev" class="btn btn-fill btn-rose btn-sm " />
                                </td>
                                <td Style="width:90%;text-align:center">
                                    <label id="msg" style="color: red; padding: 5px; border-radius: 5px;"></label>
                                </td>
                                @*<td Style="width:50%;text-align:right">
            <input type="submit" id="btnNext" name="btnPrevNext" value="Next" class="btn btn-fill btn-rose btn-sm " />
        </td>*@
                            </tr>
                        </table>
                    </div>
                </div>
                @Html.HiddenFor(m => m.EstimateDetailId, new { id = "hiddenEstimateDetailId", style = "width:0px;" })
                @Html.HiddenFor(m => m.UserId, new { id = "UserId", style = "width:0px;" })
                @Html.HiddenFor(m => m.UserTypePropId, new { id = "UserTypePropId", style = "width:0px;" })
                @Html.HiddenFor(m => m.ZZCompanyId, new { id = "ZZCompanyId", style = "width:0px;" })
                @Html.HiddenFor(m => m.WorkFlowId, new { id = "WorkFlowId", style = "width:0px;" })
                @Html.HiddenFor(m => m.StatusPropId, new { id = "StatusPropId", style = "width:0px;" })
                @Html.HiddenFor(m => m.StateId, new { id = "StateId", style = "width:0px;" })
                @Html.HiddenFor(m => m.BPId, new { id = "BPId", style = "width:0px;" })
                @Html.HiddenFor(m => m.DocId, new { id = "DocId", style = "width:0px;" })
                @Html.HiddenFor(m => m.ReportURL, new { id = "ReportURL", style = "width:0px;" })
                @Html.HiddenFor(m => m.POURL, new { id = "POURL", style = "width:0px;" })
                @Html.HiddenFor(m => m.RFQId, new { id = "RFQId", style = "width:0px;" })
            </div>
        </div>
    }
</div>

<div class="modal fade" id="PopupFromDateToDate" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Repeat Rows</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    <i class="material-icons">clear</i>
                </button>
            </div>
            <div class="modal-body" style="text-align:center">
                <div class="row">
                    <div class="table-responsive">
                        <table style="width:100%">
                            <tr>
                                <td style="width:50%; text-align:center">
                                    From Date
                                </td>
                                <td style="text-align:center">
                                    To Date
                                </td>
                            </tr>
                            <tr>
                                <td style="text-align:center">
                                    <input type="text" id="FromDate" style="text-align:center" class="form-control datetimepicker" placeholder="DD-MM-YYYY">
                                </td>
                                <td style="text-align:center">
                                    <input type="text" id="ToDate" style="text-align:center" class="form-control datetimepicker" placeholder="DD-MM-YYYY">
                                </td>
                            </tr>
                        </table>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnGenerateRepeatRowWAddon" class="btn btn-fill btn-rose btn-sm" style="margin-top: 5px;" onclick="GenerateRepeatRowAddon()">Save</button>
                <button type="button" class="btn btn-fill btn-danger btn-sm" data-dismiss="modal" style="margin-left: 5px; margin-top: 5px;">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    var EstimateDetailId = 0;
    var BookingList = '';

    function AddMore() {
        EstimateDetailId = 0;
        $("#msg").html('** Add your details in the blue row and click on <i class="material-icons">save</i> icon **');
        $("#AddMoreTR").find("button[id='btnSave']").each(function () {
            $(this).show();
        });
        $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
            $(this).val(0);
        });
        //$("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
        //    $(this).val("");
        //    $('.datetimepicker').datetimepicker({ theme: 'light', timepicker: false, format: 'd-m-Y', scrollMonth: false, scrollInput: false });
        //});
        //$("#AddMoreTR").find("input[type='text'][id='Day']").each(function () {
        //    $(this).val("");
        //});
        $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
            $(this).val("");
        });

        $("#AddMoreTR").show();
        MaskControls();
        $("#ServiceType").focus();

    }
    function AddMoreCancel() {
        $("#AddMoreTR").hide();
        $("#msg").html('');
    }

    ///////////////////////////// Load Vehicle Info  //////////////////////////////////////////////////////
    function LoadAddOnServicesInfo() {
        try {
            LoaderShow();
            var data = {};
            var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
            $.ajax({
                url: '@Url.Action("LoadEstimateInfo", "Home")',
                type: 'POST',
                dataType: 'json',
                async: true,
                data: dataWithAntiforgeryToken,
                success: function (data) {
                    LoaderHide();
                    if (data.StatusId != "99" && data.StatusId != "-99") {
                        if (data.BookingList.length > 0) {
                            debugger
                            BookingList = jQuery.grep(data.BookingList, function (obj) {
                                return obj.RefBPId == 37;
                            });
                            if (BookingList.length > 0) {
                                BindWSData(BookingList);
                            }
                        }
                    }
                    else {
                       // alert(data.Status);
                    }
                },
                error: function (xhr) {

                    LoaderHide();
                    alert(xhr.responseText);
                }
            });
        }
        catch (e) {

            LoaderHide();
            alert(e.message);
            //  return false;
        }
    }

    //////////////////////// Vehicle Edit ////////////////////////////////////////////////////////////
    function AddOnServicesEdit(varEstimateDetailId) {
        try {
            $("#msg").html('** Edit your details in the blue row and click on <i class="material-icons">save</i> icon **');
            EstimateDetailId = 0;
            if (BookingList.length > 0) {
                var varWS = jQuery.grep(BookingList, function (obj) {
                    return obj.EstimateDetailId == varEstimateDetailId;
                });

                EstimateDetailId = NullHandle(varWS[0].EstimateDetailId);

                $("#AddMoreTR").find("button[id='btnSave']").each(function () {
                    $(this).show();
                });
                $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                    $(this).val(NullHandle(varWS[0].ServiceId));
                });
                //$("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
                //    $(this).val(NullHandle(varWS[0].ZZServiceDate));
                //    $('.datetimepicker').datetimepicker({ theme: 'light', timepicker: false, format: 'd-m-Y', scrollMonth: false, scrollInput: false });
                //});
                //$("#AddMoreTR").find("input[type='text'][id='Day']").each(function () {
                //    $(this).val(NullHandle(varWS[0].BookingDay));
                //});
                $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                    $(this).val(NullHandle(varWS[0].BillingQty));
                });
                $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
                    $(this).val(NullHandle(varWS[0].ZZUOM));
                });
                $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                    $(this).val(NullHandle(varWS[0].Rate));
                });
                $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                    $(this).val(NullHandle(varWS[0].Amount));
                });
                $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
                    $(this).val(NullHandle(varWS[0].Remark));
                });
                $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                    $(this).val(NullHandle(varWS[0].UOMId));
                });

                $("#AddMoreTR").show();
                MaskControls();
                $("#ServiceType").focus();
            }
        }
        catch (e) {

        }
    }

    ///////////////////////////// Vehicle Save  //////////////////////////////////////////////////////
    function AddOnServicesSave() {
        try {
            var model = {};
            var strMSG = '';
            debugger
            var varWS = jQuery.grep(BookingList, function (obj) {
                return obj.EstimateDetailId == EstimateDetailId;
            });
            var btnSave = "";

            if (parseInt(EstimateDetailId) > 0 && varWS != undefined && varWS.length > 0) {
                model = varWS[0];
            }
            else {
                model.EstimateDetailId = -1;
            }

            $("#AddMoreTR").find("button[id='btnSave']").each(function () {
                btnSave = $(this);
            });
            $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                model.ServiceId = $(this).val();
                if ($(this).val() == 0) {
                    strMSG = strMSG + 'Select Description \n</br>'
                }

            });

            

            $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                model.BillingQty = $(this).val().trim();
                if ($(this).val().trim() == "" || parseInt($(this).val().trim()) <= 0) {
                    strMSG = strMSG + 'Billing Qty \n</br>'
                }
            });
            $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                model.UOMId = $(this).val();
            });
            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                model.Rate = $(this).val().trim();
            });
            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                model.Amount = $(this).val().trim();
            });
            $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
                model.Remark = $(this).val().trim();
            });

            var varWSDuplicate = jQuery.grep(BookingList, function (obj) {
                return obj.ServiceId == model.ServiceId && obj.EstimateDetailId != EstimateDetailId;
            });

            if (varWSDuplicate.length > 0) {
                strMSG = strMSG + 'Service already exist\n</br>'
            }

            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {
                //if (parseInt(model.UOMId) == 14) {
                //    if (parseInt(model.Consumption) != 1) {
                //        alert('Services having unit "DAY" Consumption should be 1');
                //        return;
                //    }
                //    if (BookingList != null && BookingList.length > 0) {
                //        var varWSTmp = "";

                //            varWSTmp = jQuery.grep(BookingList, function (obj) {
                //                return obj.ServiceId == model.ServiceId && ToDate(obj.ZZServiceDate).getTime() == ToDate(model.ZZServiceDate).getTime();
                //            });
                //        if (varWSTmp != undefined && varWSTmp != null && ((parseInt(model.EstimateDetailId) == -1 && varWSTmp.length > 0) || (parseInt(model.EstimateDetailId) > 0 && varWSTmp.length > 1))) {
                //            alert('Services having unit "DAY" not allowed multiple for the same day/date');
                //            return;
                //        }
                //    }
                //}
                model.RefBPId = 37;
                btnSave.hide();
                LoaderShow();
                var data = {'model': model};
                var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                $.ajax({
                    url: '@Url.Action("EstimateDetailSave", "Home")',
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    data: dataWithAntiforgeryToken,
                    //contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        LoaderHide();
                        if (data.StatusId != "99" && data.StatusId != "-99") {
                            $("#msg").html('');
                            if (data.BookingList.length > 0) {
                               if (data.BookingList.length > 0) {
                                    debugger
                                    BookingList = jQuery.grep(data.BookingList, function (obj) {
                                        return obj.RefBPId == 37;
                                    });
                                    if (BookingList.length > 0) {
                                        BindWSData(BookingList);
                                        // $("#btnNext").show();
                                    }
                                }
                            }
                        }
                        btnSave.show();
                        alert(data.Status);
                    },
                    error: function (xhr) {

                        btnSave.show();
                        LoaderHide();
                        alert(xhr.responseText);
                    }
                });
            }
        }
        catch (e) {
            LoaderHide();
            btnSave.show();
            alert(e.message);
            return false;
        }
    }

    ///////////////////////////// Delete Info  //////////////////////////////////////////////////////
    function AddOnServicesDelete(varEstimateDetailId) {

        try {
            $.confirm({
                title: 'Confirm Alert!',
                content: "Are you sure want to delete?",
                icon: 'fa fa-question',
                closeIcon: true,
                animation: 'scale',
                type: 'orange',
                escapeKey: 'cancel',
                buttons: {
                    MyFunction: {
                        text: 'OK',
                        action: function () {
                            LoaderShow();
                            var data = { 'intEstimateDetailId': varEstimateDetailId };
                            var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                            $.ajax({
                                url: '@Url.Action("EstimateDetailDelete", "Home")',
                                type: 'POST',
                                dataType: 'json',
                                async: true,
                                data: dataWithAntiforgeryToken,
                                success: function (data) {
                                    LoaderHide();
                                    if (data.StatusId != "99" && data.StatusId != "-99") {
                                        $("#msg").html('');
                                        if (data.BookingList.length > 0) {
                                            debugger
                                            BookingList = jQuery.grep(data.BookingList, function (obj) {
                                                return obj.RefBPId == 37;
                                            });
                                            BindWSData(BookingList);
                                            //$("#btnNext").show();
                                        }
                                    }
                                    alert(data.Status);
                                },
                                error: function (xhr) {

                                    LoaderHide();
                                    alert(xhr.responseText);
                                }
                            });

                        }
                    },
                    cancel: function () {
                    }
                }
            });

        }
        catch (e) {

            LoaderHide();
            alert(e.message);
            //  return false;
        }
    }

    ///////////////////////////// Bind Info  //////////////////////////////////////////////////////
    function BindWSData(data) {
        debugger
        try {
            var gridData = "";
            var StatusPropId = $("#StatusPropId").val();
            var WorkFlowId = $("#WorkFlowId").val();
            gridData = '<tr id="AddMoreTR" style="display: none;">' + $("#AddMoreTR").html() + '</tr>';
            $("#lblWSCount").text(NullHandle(data.length));
            $("#tbodyWS").html("");
            for (var i = 0; i < data.length; i++) {
                gridData = gridData + "<tr>";
                gridData = gridData + "<td>" + NullHandle(data[i].ZZService) + "</td>";
                gridData = gridData + "<td style='text-align:left'>" + NullHandle(data[i].ZZUOM) + "</td>";
                gridData = gridData + "<td style='text-align:right'>" + NullHandle(data[i].BillingQty) + "</td>";
                if ((parseInt($("#WorkFlowId").val()) == 218 || parseInt($("#WorkFlowId").val()) == 221) && parseInt($("#StatusPropId").val()) == 40) {
                    gridData = gridData + "<td style='text-align:right;'>" + NullHandle(data[i].Rate) + "</td>";
                    // gridData = gridData + "<td style='text-align:right;'>" + NullHandle(data[i].Amount) + "</td>";
                }
                else {
                    gridData = gridData + "<td style='text-align:right; display:none'>" + NullHandle(data[i].Rate) + "</td>";
                    // gridData = gridData + "<td style='text-align:right; display:none'>" + NullHandle(data[i].Amount) + "</td>";
                }
                gridData = gridData + "<td>" + NullHandle(data[i].Remark) + "</td>";
                if (parseInt($("#StatusPropId").val()) == 40 && parseInt($("#WorkFlowId").val()) == 216 || parseInt($("#WorkFlowId").val()) == 219) {
                    gridData = gridData + "<td class='td-actions text-center'>";
                    gridData = gridData + "<button type='button' rel='tooltip' class='btn btn-info' title='Edit Addon Service : " + NullHandle(data[i].ZZService) + "' onclick='return AddOnServicesEdit(" + NullHandle(data[i].EstimateDetailId) + ")' > <i class='material-icons'>edit</i></button>&nbsp;";
                    //gridData = gridData + "<button type='button' rel='tooltip' class='btn btn-info' title='Copy Addon Service: " + NullHandle(data[i].ZZServiceName) + "' onclick='return AddonBookingDetailCopy(" + NullHandle(data[i].EstimateDetailId) + ")' > <i class='fa fa-copy'></i></button>&nbsp;";
                    gridData = gridData + "<button type='button' rel='tooltip' class='btn btn-danger' title='Delete Addon Service : " + NullHandle(data[i].ZZService) + "' onclick='return AddOnServicesDelete(" + NullHandle(data[i].EstimateDetailId) + ")'><i class='material-icons'>close</i></button>";
                    gridData = gridData + "</td>";
                }
                gridData = gridData + "</tr>";
            }
            $("#tbodyWS").html(gridData);
        }
        catch (e) {

        }
    }

    //////////////////////// Set Rate Unit ////////////////////////////////////////////////////////
    function SetRateUnit() {
        try {
            var varServiceId = $("#ServiceType").val();
            var varTimeSlotId = 0;

            var strMSG = "";
            if (parseInt(varServiceId) == 0) {
                alert("Select Description");
                return false;
            }

            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {
                var varServiceList = [];
                varServiceList[0] = NullHandle(varServiceId);
                var data = { 'intlstServiceId': varServiceList, 'intTimeSlotId': parseInt(varTimeSlotId), 'strWED': "" };
                debugger
                var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                LoaderShow();
                $.ajax({
                    url: '@Url.Action("BookingStatusGetByServiceIdTimeSlotPropIdWEFDateEstimate", "Home")',
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    data: dataWithAntiforgeryToken,
                   // contentType: "application/json; charset=utf-8",
                    success: function (dataBokkingStatus) {
                        LoaderHide();
                        if (dataBokkingStatus.StatusId != "99" && dataBokkingStatus.StatusId != "-99") {
                            var varBookingStatusList = dataBokkingStatus.BookingStatusList;
                            var varConsumption = 0;
                            if (varBookingStatusList.length > 0) {
                                $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                                    $(this).val(NullHandle(varBookingStatusList[0].MinBilling));
                                });

                                $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
                                    $(this).val(NullHandle(varBookingStatusList[0].UOM));
                                });
                                $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                                    $(this).val(NullHandle(varBookingStatusList[0].Rate));
                                });
                                $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                                    $(this).val(parseFloat(varBookingStatusList[0].Rate) * parseFloat(varBookingStatusList[0].MinBilling));
                                });
                                $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                                    $(this).val(NullHandle(varBookingStatusList[0].UOMPropId));
                                });
                            }
                        }
                        else {
                            alert(data.Status);
                        }
                    },
                    error: function (xhr) {
                        LoaderHide();
                        alert(xhr.responseText);
                    }
                });
            }
        }
        catch (e) {
            LoaderHide();
            alert(xhr.responseText);
        }
    }

    ///////////////////////////// Calculate Amount  //////////////////////////////////////////////////////
    function CalculateAmount() {
        try {
            var varConsumption = 0;
            var varRate = 0;

            $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                varConsumption = $(this).val().trim();
                if (varConsumption == undefined || varConsumption == "") {
                    varConsumption = 0
                }
            });

            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                varRate = $(this).val().trim();
                if (varRate == undefined || varRate == "") {
                    varRate = 0
                }
            });

            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                $(this).val(parseFloat(varRate) * parseFloat(varConsumption));
            });


        }
        catch (e) {

        }
    }

    ///////////////////////////// Set Button Visibility  //////////////////////////////////////////////////////
    function SetButtonVisibility() {
        try {
            if (parseInt($("#StatusPropId").val()) == 40 && (parseInt($("#WorkFlowId").val()) == 216)|| (parseInt($("#WorkFlowId").val()) == 219)) {
                $("#btnAdd").attr('disabled', false);
            }
            else {
                $("#btnAdd").attr('disabled', true);
            }
        }
        catch (e) {

        }
    }


    ///////////////////////////// Masking  //////////////////////////////////////////////////////
    function MaskControls() {
        try {
            (function ($) {
                $(function () {

                    $("#AddMoreTR").find("input[type='text'][id='Consumption']").each(function () {
                        $(this).attr('onkeypress', 'return CheckIsNumeric(event,this);');
                    });

                });
            })(jQuery);
        }
        catch (e) {

        }
    }


    function AddonBookingDetailCopy(EstimateDetailId) {
        try {
            $("#hiddenEstimateDetailId").val(EstimateDetailId);
            $("#PopupFromDateToDate").modal("show");
        } catch { }

    }

    function GenerateRepeatRowAddon() {
        try {
            debugger;
            var varFromDate = $("#FromDate").val().trim();
            var varToDate = $("#ToDate").val().trim();
            var varEstimateDetailId = $("#hiddenEstimateDetailId").val();
            var varBookingId = $("#DocId").val().trim();

            var strMSG = "";
            if (varFromDate == "") {
                strMSG = strMSG + 'From Date  \n</br>'
            }

            if (varToDate == "") {
                strMSG = strMSG + 'To Date  \n</br>'
            }

            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {

                $("#btnGenerateRepeatRowAddon").hide();
                LoaderShow();
                var model={ };
                model.IntOne = varEstimateDetailId;
                model.IntTwo = varBookingId;
                model.StrOne = varFromDate;
                model.StrTwo = varToDate;

                 var data = { 'model': model};
                 var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                $.ajax({
                    url: '@Url.Action("BookingDetailAddOnServicesInsertFrontRepeatRow", "Home")',
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    data: dataWithAntiforgeryToken,
                    success: function (data) {
                        debugger;
                        LoaderHide();
                        if (data.StatusId != "99" && data.StatusId != "-99") {
                            $("#PopupFromDateToDate").modal("hide");
                            BookingList = data.BookingList;
                            BindWSData(data.BookingList);
                        }
                        $("#btnGenerateRepeatRowWorkShop").show();
                        alert(data.Status);
                    },
                    error: function (xhr) {

                        $("#btnGenerateRepeatRowWorkShop").show();
                        LoaderHide();
                        alert(xhr.responseText);
                    }
                });
            }
        }
        catch (e) {

            LoaderHide();
            $("#btnRepeatRow").show();
            alert(e.message);
            return false;
        }
    }

    function ToDate(strdate) {
        var parts = strdate.split("-");
        if (parts.length < 3) {
            parts = strdate.split("/");
        }
        return new Date(parts[2], parts[1] - 1, parts[0])
    }

    $(document).ready(function () {
        MaskControls();
        SetButtonVisibility();
        LoadAddOnServicesInfo();
    });

</script>