@model PGMSFront.Models.CommonModel
@{
    ViewBag.Title = "Lab Booking";
    Layout = "~/Views/Shared/_LayoutLab.cshtml";
}

<style>
    #blink-text{
        animation-name:blink;
        animation-duration:2s;
        animation-timing-function:ease-in;
        animation-iteration-count:infinite;
    }

    .table > tbody > tr > td {
        padding: 2px 8px !important;
        cursor: pointer !important;
    }

    .card {
        margin-bottom: 0px !important;
        margin-top: 25px !important;
    }

    .bootstrap-select {
        margin-top: 16px !important;
    }

    .main-panel > .content {
        margin-top: 0 !important;
    }

    .card .card-body {
        padding: 0px 5px 5px 5px !important;
    }

    .custom-file-upload {
        color: #fff;
        background-color: #e91e63;
        border-color: #e91e63;
        padding: 8px 10px 5px 10px !important;
        font-size: 0.6875rem;
        line-height: 1.5;
        border-radius: 0.2rem;
        box-shadow: 0 2px 2px 0 rgb(233 30 99 / 14%), 0 3px 1px -2px rgb(233 30 99 / 20%), 0 1px 5px 0 rgb(233 30 99 / 12%);
    }

    #AddMoreTR {
        background: lightblue;
    }
</style>
<div class="content">
    @using (Html.BeginForm(new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
    <div class="container-fluid">
        @Html.Partial("~/Views/Home/BookingHeader.cshtml")
        <div class="row" style="margin-bottom:-35px;">
            <p id="blink-text" style="color:red;"><b>Kindly download mandatory lab booking facility document template before to add labs.</b></p><a href="@Url.Action("LabBookingRequiredDoc","Home")">Click Here</a>
        </div>
        <div class="row">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">
                        @if (Model.StatusPropId == 40 && Model.RFQId == 0 && (Model.WorkFlowId == 6 || Model.WorkFlowId == 57 || Model.WorkFlowId == 29 || Model.WorkFlowId == 36 || Model.WorkFlowId == 38))
                        {
                            <button type="button" class="btn btn-fill btn-rose btn-sm" onclick="AddMore()" id="btnAdd">Add More</button>
                            <button type="button" class="btn btn-fill btn-rose btn-sm" onclick="RepeatRowLab()">Repeat these details</button>
                            <span class="pull-right">
                                @*<label for="file-upload" class="custom-file-upload">
                                    <i class="fa fa-cloud-upload"></i> Upload AIS-007
                                </label>*@
                                <input id="file-upload" onchange="UploadAIS()" type="file" style="display: none;">
                                @*<label id="uploadProgressBill" style="background-color: orangered;color:white; font-size: 12px;"></label>*@
                                @*<button id="viewAIS" type="button" class="btn btn-fill btn-rose btn-sm" onclick="return ViewAIS();" style="display: none">View AIS-007</button>*@
                            </span>
                        }
                    </h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead class=" text-primary">
                                        <tr>
                                            <th width="15%">Lab</th>
                                            <th width="19%">Facility</th>
                                            <th width="10%">VEH/CMPT</th>
                                            @*@if (Model.BPId == 46 || Model.BPId == 91)
                                            {
                                                <th width="10%" style="text-align:center">Day</th>
                                            }
                                            else
                                            {*@
                                            <th width="10%" style="        text-align: center">Date</th>
                                            @*}*@

                                            <th width="7%" style="        text-align: center">Usage</th>
                                            <th width="7%" style="        text-align: center">Unit</th>
                                            @if (Model.WorkFlowId == 57 || Model.WorkFlowId == 58 ||
                                                Model.WorkFlowId == 29 || Model.WorkFlowId == 51 ||
                                                Model.WorkFlowId == 38 || Model.WorkFlowId == 53 ||
                                                Model.WorkFlowId == 36 || Model.WorkFlowId == 44)
                                            {
                                                <th width="7%" style="        text-align: right;
        display: none">Rate</th>
                                                <th width="7%" style="        text-align: right;
        display: none">Amount</th>
                                            }
                                            else
                                            {
                                                <th width="7%" style="        text-align: right">Rate</th>
                                                if (Model.WorkFlowId == 59 || Model.WorkFlowId == 52 || Model.WorkFlowId == 54)
                                                {
                                                    <th class="text-right" width="10%">Quot. Amount</th>
                                                }
                                                else
                                                {
                                                    <th width="10%" style="        text-align: right">Amount</th>
                                                }
                                            }

                                            <th width="10%">Remark</th>
                                            <th width="10%">Browse</th>
                                            <th width="8%" class="text-center">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyWS">
                                        <tr id="AddMoreTR" style="        display: none;">
                                            <td>
                                                <select class="form-control" id="LabType" onchange="SetFacility()">
                                                    <option value="0">-Select-</option>
                                                    @foreach (var itm in ViewBag.ServiveLookup)
                                                    {
                                                        <option value='@itm.Value'>@itm.Text</option>
                                                    }
                                                </select>
                                            </td>
                                            <td>
                                                <select class="form-control" id="ServiceType" onchange="SetVehicleComp()"></select>
                                            </td>
                                            <td>
                                                <select class="form-control" id="VehicleType"></select>
                                            </td>
                                            @*@if (Model.BPId == 46 || Model.BPId == 91)
                                            {
                                                <td><input id="Day" type="text" style="text-align: center" onkeypress='return CheckIsNumeric(event,this);' onchange="SetRateUnit()" class="form-control" value=""></td>
                                            }
                                            else
                                            {*@
                                            <td><input id="Date" type="text" style="        text-align: center" onblur="SetRateUnit()" class="form-control datetimepicker"></td>
                                            @*}*@


                                            <td><input id="Usage" type="text" style="        text-align: center" onchange="CalculateAmount()" onkeypress='return CheckIsNumeric(event,this);' class="form-control" value=""></td>
                                            <td><input id="Unit" disabled="disabled" style="        text-align: center" type="text" class="form-control" value=""></td>
                                            @if (Model.WorkFlowId == 57 || Model.WorkFlowId == 58 ||
                                                Model.WorkFlowId == 29 || Model.WorkFlowId == 51 ||
                                                Model.WorkFlowId == 38 || Model.WorkFlowId == 53 ||
                                                Model.WorkFlowId == 36 || Model.WorkFlowId == 44)
                                            {
                                                <td style="        text-align: right;
        display: none">
                                                    <input id="Rate" disabled="disabled" style="        text-align: right;
        display: none" type="text" class="form-control" value="">
                                                </td>
                                                <td style="        text-align: right;
        display: none">
                                                    <input id="Amount" disabled="disabled" type="text" style="        text-align: right;
        display: none" class="form-control" value="">
                                                </td>
                                            }
                                            else
                                            {
                                                <td><input id="Rate" disabled="disabled" style="        text-align: right" type="text" class="form-control" value=""></td>
                                                <td><input id="Amount" disabled="disabled" type="text" style="        text-align: right" class="form-control" value=""></td>
                                            }

                                            <td><textarea id="Remark" class="form-control"></textarea></td>
                                            <td>
                                                <input type="file" id="uploaddoc" multiple />
                                            </td>
                                            <td class='td-actions text-center'>
                                                <button type='button' rel='tooltip' id="btnSave" onclick="return LabServicesSave()" class='btn btn-info' data-original-title='' title=''><i class='material-icons'>save</i></button>
                                                <button type='button' rel='tooltip' class='btn btn-danger' data-original-title='' title='' onclick="AddMoreCancel()"><i class='material-icons'>close</i></button>
                                            </td>
                                            <td style='        display: none'><input type='hidden' id='hdnUOMPropId' /> </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <br />
                    <table Style="width: 100%">
                        <tr>
                            <td Style="width: 10%;text-align: left">
                                <input type="submit" id="btnPrev" name="btnPrevNext" value="Prev" class="btn btn-fill btn-rose btn-sm " />
                            </td>
                            <td Style="width:80%;text-align:center">
                                <label id="msg" style="color: red; padding: 5px; border-radius: 5px;"></label>
                            </td>
                            <td Style="width: 10%;text-align: right">
                                <input type="submit" id="btnNext" name="btnPrevNext" value="Next" style="        display: none" class="btn btn-fill btn-rose btn-sm " />
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
            @Html.HiddenFor(m => m.LabBookingDetailId, new { id = "hiddenLabBookingDetailId", style = "width:0px;" })
            @Html.HiddenFor(m => m.UserId, new { id = "UserId", style = "width:0px;" })
            @Html.HiddenFor(m => m.UserTypePropId, new { id = "UserTypePropId", style = "width:0px;" })
            @Html.HiddenFor(m => m.ZZCompanyId, new { id = "ZZCompanyId", style = "width:0px;" })
            @Html.HiddenFor(m => m.WorkFlowId, new { id = "WorkFlowId", style = "width:0px;" })
            @Html.HiddenFor(m => m.StatusPropId, new { id = "StatusPropId", style = "width:0px;" })
            @Html.HiddenFor(m => m.StateId, new { id = "StateId", style = "width:0px;" })
            @Html.HiddenFor(m => m.BPId, new { id = "BPId", style = "width:0px;" })
            @Html.HiddenFor(m => m.DocId, new { id = "DocId", style = "width:0px;" })
            @Html.HiddenFor(m => m.ReportURL, new { id = "ReportURL", style = "width:0px;" })
            @Html.HiddenFor(m => m.POURL, new { id = "POURL", style = "width:0px;" })
            @Html.HiddenFor(m => m.RFQId, new { id = "RFQId", style = "width:0px;" })
            @Html.HiddenFor(m => m.SupportDocPathURL, new { id = "SupportDocPathURL", style = "width:0px;" })
        </div>
    </div>
    }
</div>
<div class="modal fade" id="PopupFromDateToDate" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title bgTitle">Copy Rows for <span id="txtTrackName"></span></h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    <i class="material-icons">clear</i>
                </button>
            </div>
            <div class="modal-body" style="        text-align: center">
                <div class="row">
                    <div class="table-responsive">
                        <table style="        width: 100%">
                            <tr>
                                <td style="        width: 50%;
        text-align: center">
                                    From Date
                                </td>
                                <td style="        text-align: center">
                                    To Date
                                </td>
                            </tr>
                            <tr>
                                <td style="        text-align: center">
                                    <input type="text" id="FromDate" style="        text-align: center" class="form-control datetimepicker" placeholder="DD-MM-YYYY">
                                </td>
                                <td style="        text-align: center">
                                    <input type="text" id="ToDate" style="        text-align: center" class="form-control datetimepicker" placeholder="DD-MM-YYYY">
                                </td>
                            </tr>
                        </table>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnGenerateRepeatRowLab" class="btn btn-fill btn-rose btn-sm" style="        margin-top: 5px;" onclick="GenerateRepeatRowLab()">Save</button>
                <button type="button" class="btn btn-fill btn-danger btn-sm" data-dismiss="modal" style="        margin-left: 5px;
        margin-top: 5px;">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>
<script>
    var LabBookingDetailId = 0;
    var LabServicesList = '';
    var ServiceList = '';
    var LablinkVorCList = '';
    var VehicleCompList = '';
    var fileCount = 0;

    var ColourRowId = -1;
    var Holdid = '';

    $('#file-upload').change(function() {
        var i = $(this).prev('label').clone();
        var file = $('#file-upload')[0].files[0].name;
        $(this).prev('label').text(file);
    });

    function UploadAIS() {
        try {
            var varFileData = $("#file-upload").val().trim();
            if (varFileData == '') {
                alert("Select File!");
                return false;
            }
            else {
                debugger
                var formData = new FormData();
                var imagefile = document.getElementById('file-upload').files[0];
                var FileType = imagefile.type;
                var Fileize = imagefile.size;
                if (FileType == "image/jpeg" || FileType == "application/pdf") {
                    if ((parseInt(Fileize) / 1024) > 0 && (parseInt(Fileize) / 1024) < 5120) {
                        //LoaderShow();
                        formData.append("ImageData", imagefile);
                        //var xhr = new XMLHttpRequest();
                        //xhr.open("POST", "../Home/UploadAIS", true);
                        //xhr.upload.addEventListener("progress", function (evt) { UploadPOProgress(evt); }, false);
                        //xhr.addEventListener("load", function (evt) { UploadPOComplete(evt); }, false);
                        //xhr.addEventListener("error", function (evt) { UploadPOFailed(evt); }, false);
                        //xhr.addEventListener("abort", function (evt) { UploadPOCanceled(evt); }, false);
                        //xhr.send(formData);
                        //// $('#file-upload').val('');
                        $.ajax({
                            method:"POST",
                            url: '@Url.Action("UploadAIS", "Home")',
                            data:formData,
                            cache:false,
                            contentType: false,
                            processData: false,
                            beforeSend:function(){
                                LoaderShow();
                            },
                            success: function (data) {
                                LoaderHide();
                                if (data.StatusId != "99" && data.StatusId != "-99") {
                                    debugger
                                    $('#file-upload').val('');
                                    var ZZSupportDocPath = data.BookingList[0].ZZSupportDocPath;
                                    if (ZZSupportDocPath == "" || ZZSupportDocPath == null || ZZSupportDocPath == undefined) {
                                        $("#viewAIS").hide();
                                    } else {
                                        $("#viewAIS").show();
                                    }
                                    alert(data.Status);
                                }
                                else {
                                   alert(data.Status);
                                }
                            },
                            error: function (xhr) {
                                LoaderHide();
                                alert(xhr.responseText);
                            }
                        });
                    }
                    else {
                        alert("AIS-077 file size between 1 KB to 5MB can be accepted!");
                        return false;
                    }
                }
                else {
                    alert("Only (JPEG, PDF) file format can be accepted!");
                    return false;
                }
            }
        }
        catch (e) {
            //$("#btnUpload").show();
            // alert(e.message);
            return false;
        }
    }

    function UploadPOProgress(evt) {
        if (evt.lengthComputable) {
            var percentComplete = Math.round(evt.loaded * 100 / evt.total);
            $("#uploadProgressBill").text("Uploading Progress : " + percentComplete + "% ");
        }
    }

    function UploadPOComplete(evt) {
        LoaderHide();
        // $("#btnUpload").show();
        if (evt.target.status == 200) {
            var data = JSON.parse(evt.target.response);
            alert(data.Status);
            $("#uploadProgressBill").text('');
        }
        else {
            $("#uploadProgressBill").text('');
            alert("Error Uploading AIS-007!");
        }
    }

    function UploadPOFailed(evt) {
        LoaderHide();
        // $("#btnUpload").show();
        $("#uploadProgressBill").text('');
        alert("There was an error attempting to upload the AIS-007!");

    }

    function UploadPOCanceled(evt) {
        LoaderHide();
        // $("#btnUpload").show();
        $("#uploadProgressBill").text('');
        alert("The upload has been canceled by the user or the browser dropped the connection!");
    }

    function ViewAIS() {
        try {
            var strPOViewerUrl = $("#SupportDocPathURL").val();
            window.open(strPOViewerUrl, '_blank');
        }
        catch (e) {
            alert(e.message);
        }
        return false;
    }

    function AddMore() {
        debugger;
        LabBookingDetailId = 0;
        $("#msg").html('** Add your details in the blue row and click on <i class="material-icons">save</i> icon **');
        $("#AddMoreTR").find("button[id='btnSave']").each(function () {
            $(this).show();
        });
        $("#AddMoreTR").find("select[id='LabType']").each(function () {
            $(this).val(0);
        });
        $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
            $(this).html("");
        });
        $("#AddMoreTR").find("select[id='VehicleType']").each(function () {
            $(this).val(0);
        });
        $("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
            $(this).val("");
            $('.datetimepicker').datetimepicker({ theme: 'light', timepicker: false, format: 'd-m-Y', scrollMonth: false, scrollInput: false });
        });
        //$("#AddMoreTR").find("input[type='text'][id='Day']").each(function () {
        //    $(this).val("");
        //});
        $("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
            $(this).val("");
        });
        $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
            $(this).val("");
        });

        $("#AddMoreTR").show();
        MaskControls();
        $("#LabType").focus();

    }
    function AddMoreCancel() {
        $("#AddMoreTR").hide();
        $("#msg").html('');
    }

    ///////////////////////////// Load Vehicle Info  //////////////////////////////////////////////////////
    function LoadLabServicesInfo() {
        try {
            LoaderShow();
            var data = {};
            var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
            $.ajax({
                url: '@Url.Action("LoadLabServicesInfo", "Home")',
                type: 'POST',
                dataType: 'json',
                async: true,
                data: dataWithAntiforgeryToken,
                success: function (data) {
                    LoaderHide();
                    if (data.StatusId != "99" && data.StatusId != "-99") {
                        debugger
                        LabServicesList = data.LabServicesList;
                        ServiceList = data.ServiceList;
                        LablinkVorCList = data.LablinkVorCList;
                        VehicleCompList = data.VehicleCompList;
                        BindWSData(data.LabServicesList);
                        var ZZSupportDocPath = data.BookingList[0].ZZSupportDocPath;
                        if (ZZSupportDocPath == "" || ZZSupportDocPath == null || ZZSupportDocPath == undefined) {
                            $("#viewAIS").hide();
                        } else {
                            $("#viewAIS").show();
                        }
                        if (LabServicesList.length > 0) {
                            $("#btnNext").show();
                        }
                    }
                    else {
                       // alert(data.Status);
                    }
                },
                error: function (xhr) {

                    LoaderHide();
                    alert(xhr.responseText);
                }
            });
        }
        catch (e) {

            LoaderHide();
            alert(e.message);
            //  return false;
        }
    }

    //////////////////////// Vehicle Edit ////////////////////////////////////////////////////////////
    function LabServicesEdit(varLabBookingDetailId) {
        debugger;
        try {
            $("#msg").html('** Edit your details in the blue row and click on <i class="material-icons">save</i> icon **');
            LabBookingDetailId = 0;
            if (LabServicesList.length > 0) {
                var varWS = jQuery.grep(LabServicesList, function (obj) {
                    return obj.LabBookingDetailId == varLabBookingDetailId;
                });

                LabBookingDetailId = NullHandle(varWS[0].LabBookingDetailId);

                $("#AddMoreTR").find("button[id='btnSave']").each(function () {
                    $(this).show();
                });
                $("#AddMoreTR").find("select[id='LabType']").each(function () {
                    var varServiceList = jQuery.grep(ServiceList, function (obj) {
                        return obj.ServiceId == varWS[0].ServiceId;
                    });

                    if (varServiceList != undefined && varServiceList.length > 0) {
                        $(this).val(varServiceList[0].ServiceName);
                    }
                    SetFacility();
                });
                $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                    $(this).val(NullHandle(varWS[0].ServiceId));
                    SetVehicleComp()
                });
                $("#AddMoreTR").find("select[id='VehicleType']").each(function () {
                    $(this).val(NullHandle(varWS[0].VehCompId));
                });
                $("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
                    $(this).val(NullHandle(varWS[0].ZZUsageDate));
                    $('.datetimepicker').datetimepicker({ theme: 'light', timepicker: false, format: 'd-m-Y', scrollMonth: false, scrollInput: false });
                });
                //$("#AddMoreTR").find("input[type='text'][id='Day']").each(function () {
                //    $(this).val(NullHandle(varWS[0].BookingDay));
                //});
                $("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
                    $(this).val(NullHandle(varWS[0].UsageHours));
                });
                $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
                    $(this).val(NullHandle(varWS[0].ZZUOM));
                });
                $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                    $(this).val(NullHandle(varWS[0].Rate));
                });
                $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                    $(this).val(NullHandle(varWS[0].Amount));
                });
                $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
                    $(this).val(NullHandle(varWS[0].Remark));
                });
                $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                    $(this).val(NullHandle(varWS[0].UOMPropId));
                });

                $("#AddMoreTR").show();
                MaskControls();
                $("#LabType").focus();
            }
        }
        catch (e) {

        }
    }

    ///////////////////////////// Vehicle Save  //////////////////////////////////////////////////////
    function LabServicesSave() {
        try {
            var model = {};
            var strMSG = '';
            debugger
            LabServicesList;
            var varWS = jQuery.grep(LabServicesList, function (obj) {
                return obj.LabBookingDetailId == LabBookingDetailId;
            });
            var btnSave = "";

            if (parseInt(LabBookingDetailId) > 0 && varWS != undefined && varWS.length > 0) {
                model = varWS[0];
            }
            else {
                model.LabBookingDetailId = -1;
            }

            $("#AddMoreTR").find("button[id='btnSave']").each(function () {
                btnSave = $(this);
            });

            $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                model.ServiceId = $(this).val();
                if ($(this).val() == 0) {
                    strMSG = strMSG + 'Select Facility \n</br>'
                }
            });
            $("#AddMoreTR").find("select[id='VehicleType']").each(function () {
                model.VehCompId = $(this).val();
                if (parseInt($(this).val()) == 0) {
                    strMSG = strMSG + 'VEH/CMPT \n</br>'
                }
            });

            //if (parseInt($("#BPId").val()) == 46 || parseInt($("#BPId").val()) == 91) {
            //    $("#AddMoreTR").find("input[type='text'][id='Day']").each(function () {
            //        model.BookingDay = $(this).val().trim();
            //        if ($(this).val().trim() == "" || parseInt($(this).val().trim())<=0) {
            //            strMSG = strMSG + 'Day \n</br>'
            //        }
            //    });
            //}
            //else {
                $("#AddMoreTR").find("input[type='text'][id='Date']").each(function () {
                    model.ZZUsageDate = $(this).val().trim();
                    if ($(this).val().trim() == "") {
                        strMSG = strMSG + 'Select Date \n</br>'
                    }
                });
           // }

            $("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
                model.UsageHours = $(this).val().trim();
                if ($(this).val().trim() == "" || parseInt($(this).val().trim()) <= 0) {
                    strMSG = strMSG + 'Usage \n</br>'
                }
            });
            $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                model.UOMPropId = $(this).val();
            });
            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                model.Rate = $(this).val().trim();
            });
            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                model.Amount = $(this).val().trim();
            });
            $("#AddMoreTR").find("textarea[id='Remark']").each(function () {
                model.Remark = $(this).val().trim();
                //if ($(this).val().trim() == "") {
                //    strMSG = strMSG + 'Remark  \n</br>'
                //}
            });

            var varWSDuplicate = jQuery.grep(LabServicesList, function (obj) {
                return obj.ServiceId == model.ServiceId && obj.ZZUsageDate == model.ZZUsageDate && obj.UOMPropId == model.UOMPropId && obj.LabBookingDetailId != LabBookingDetailId;
            });

            if (varWSDuplicate.length > 0) {
                strMSG = strMSG + 'Lab service already exist\n</br>'
            }

            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {
                if (parseInt(model.UOMPropId) == 14) {
                    if (parseInt(model.UsageHours) != 1) {
                        alert('Services having unit "DAY" Usage should be 1');
                        return;
                    }
                    if (LabServicesList != null && LabServicesList.length > 0) {
                        var varWSTmp = "";
                        //if (parseInt($("#BPId").val()) == 46 || parseInt($("#BPId").val()) == 91) {
                        //    varWSTmp = jQuery.grep(LabServicesList, function (obj) {
                        //        return obj.ServiceId == model.ServiceId && obj.BookingDay == model.BookingDay;
                        //    });
                        //}
                        //else {
                            varWSTmp = jQuery.grep(LabServicesList, function (obj) {
                                return obj.ServiceId == model.ServiceId && ToDate(obj.ZZUsageDate).getTime() == ToDate(model.ZZUsageDate).getTime();
                            });
                       // }
                        if (varWSTmp != undefined && varWSTmp != null && ((parseInt(model.LabBookingDetailId) == -1 && varWSTmp.length > 0) || (parseInt(model.LabBookingDetailId) > 0 && varWSTmp.length > 1))) {
                            alert('Services having unit "DAY" not allowed multiple for the same day/date');
                            return;
                        }
                    }
                }
                debugger;
                var fileData = new FormData();

                //Upload file
                var fileUpload = $("#uploaddoc").get(0);
                var files = fileUpload.files;
                if (fileUpload.files.length <= 0) {
                    alert("Upload mandatory lab facility document, you can get those document by ablove blinking link.");
                    return;
                }
                for (var i = 0; i < files.length; i++) {
                    fileData.append("files", files[i]);
                }

                btnSave.hide();
                LoaderShow();
                //var data = { 'model': model };
               // var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                fileData.append("data", JSON.stringify(model));

                $.ajax({
                    url: '@Url.Action("LabServicesSave", "Home")',
                    type: 'POST',
                    dataType: 'json',
                    data: fileData,
                    cache: false,
                    contentType: false,
                    processData: false,
                //   /* contentType: false,*/
                //    processData: false,
                ///*    async: true,*/
                    success: function (data) {

                        LoaderHide();
                        if (data.StatusId != "99" && data.StatusId != "-99") {
                            $("#msg").html('');
                            LabServicesList = data.LabServicesList;
                            fileCount = data.fileCount;
                            BindWSData(data.LabServicesList);

                            if (LabServicesList.length > 0) {
                                $("#btnNext").show();
                            }
                        }
                        btnSave.show();
                        alert(data.Status);
                    },
                    error: function (xhr) {

                        btnSave.show();
                        LoaderHide();
                        alert(xhr.responseText);
                    }
                });
            }
        }
        catch (e) {
            LoaderHide();
            btnSave.show();
            alert(e.message);
            return false;
        }
    }

    ///////////////////////////// Delete Info  //////////////////////////////////////////////////////
    function LabServicesDelete(varLabBookingDetailId) {

        try {
            $.confirm({
                title: 'Confirm Alert!',
                content: "Are you sure want to delete?",
                icon: 'fa fa-question',
                closeIcon: true,
                animation: 'scale',
                type: 'orange',
                escapeKey: 'cancel',
                buttons: {
                    MyFunction: {
                        text: 'OK',
                        action: function () {
                            LoaderShow();
                            var data = { 'intLabBookingDetailId': varLabBookingDetailId };
                            var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                            $.ajax({
                                url: '@Url.Action("LabServicesDelete", "Home")',
                                type: 'POST',
                                dataType: 'json',
                                async: true,
                                data: dataWithAntiforgeryToken,
                                success: function (data) {

                                    LoaderHide();
                                    if (data.StatusId != "99" && data.StatusId != "-99") {
                                        $("#msg").html('');
                                        LabServicesList = data.LabServicesList;
                                        BindWSData(data.LabServicesList);

                                        if (LabServicesList.length > 0) {
                                            $("#btnNext").show();
                                        }
                                        else {
                                            $("#btnNext").hide();
                                        }
                                    }
                                    alert(data.Status);
                                },
                                error: function (xhr) {

                                    LoaderHide();
                                    alert(xhr.responseText);
                                }
                            });

                        }
                    },
                    cancel: function () {
                    }
                }
            });

        }
        catch (e) {

            LoaderHide();
            alert(e.message);
            //  return false;
        }
    }

    ///////////////////////////// Bind Info  //////////////////////////////////////////////////////
    function BindWSData(data) {
        debugger;
        try {
            var gridData = "";
            var StatusPropId = $("#StatusPropId").val();
            var WorkFlowId = $("#WorkFlowId").val();
            //var row = $('#tbodyVehicle').find('tr:eq(0)');

            gridData = '<tr id="AddMoreTR" style="display: none;">' + $("#AddMoreTR").html() + '</tr>';

            $("#lblWSCount").text(NullHandle(data.length));

            $("#tbodyWS").html("");

            for (var i = 0; i < data.length; i++) {
                var indx = i + 1;
                gridData = gridData + "<tr id='trTrack_" + indx + "' onclick='SelectRow(" + '"' + NullHandle(data[i].ZZUsageDate) + '"' + "," + indx + "," + NullHandle(data[i].LabBookingDetailId) + "," + '"' + NullHandle(data[i].ZZServiceName) + '"' + ")'>";
                gridData = gridData + "<td>" + NullHandle(data[i].ZZService) + "</td>";
                gridData = gridData + "<td>" + NullHandle(data[i].ZZServiceName) + "</td>";
                gridData = gridData + "<td>" + NullHandle(data[i].ZZVehComp) + "</td>";
                //if (parseInt($("#BPId").val()) == 46 || parseInt($("#BPId").val()) == 91) {
                //    gridData = gridData + "<td style='text-align:center'>" + NullHandle(data[i].BookingDay) + "</td>";
                //}
                //else {
                    gridData = gridData + "<td style='text-align:center'>" + NullHandle(data[i].ZZUsageDate) + "</td>";
                //}

                gridData = gridData + "<td style='text-align:center'>" + NullHandle(data[i].UsageHours) + "</td>";
                gridData = gridData + "<td style='text-align:center'>" + NullHandle(data[i].ZZUOM) + "</td>";

                if (parseInt($("#WorkFlowId").val()) == 57 || parseInt($("#WorkFlowId").val()) == 58 ||
                    parseInt($("#WorkFlowId").val()) == 29 || parseInt($("#WorkFlowId").val()) == 51 ||
                    parseInt($("#WorkFlowId").val()) == 38 || parseInt($("#WorkFlowId").val()) == 53 ||
                    parseInt($("#WorkFlowId").val()) == 36 || parseInt($("#WorkFlowId").val()) == 44) {
                    gridData = gridData + "<td style='text-align:right;display:none'>" + NullHandle(data[i].Rate) + "</td>";
                    gridData = gridData + "<td style='text-align:right;display:none'>" + NullHandle(data[i].Amount) + "</td>";
                }
                else {
                    if (parseInt($("#WorkFlowId").val()) == 59 || parseInt($("#WorkFlowId").val()) == 52 || parseInt($("#WorkFlowId").val()) == 54) {
                        gridData = gridData + "<td style='text-align:right'>" + NullHandleFloat(parseFloat(data[i].QuotAmount) / parseFloat(data[i].UsageHours)) + "</td>";
                        gridData = gridData + "<td class='text-right'>" + NullHandle(data[i].QuotAmount) + "</td>";
                    }
                    else {
                        gridData = gridData + "<td style='text-align:right'>" + NullHandle(data[i].Rate) + "</td>";
                        gridData = gridData + "<td style='text-align:right'>" + NullHandle(data[i].Amount) + "</td>";
                    }
                }
                debugger;
                gridData = gridData + "<td>" + NullHandle(data[i].Remark) + "</td>";
                /*   gridData = gridData + "<td>" + NullHandle(fileCount) + " files uploaded.</td>";*/
                gridData = gridData + "<td>files uploaded.</td>";

                if (parseInt($("#StatusPropId").val()) == 40 && parseInt($("#RFQId").val()) == 0 && (parseInt($("#WorkFlowId").val()) == 6 || parseInt($("#WorkFlowId").val()) == 57 || parseInt($("#WorkFlowId").val()) == 29 || parseInt($("#WorkFlowId").val()) == 36 || parseInt($("#WorkFlowId").val()) == 38)) {
                    gridData = gridData + "<td class='td-actions text-center'>";
                    gridData = gridData + "<button type='button' rel='tooltip' class='btn btn-info' title='Edit Lab Service : " + NullHandle(data[i].ZZServiceName) + "' onclick='return LabServicesEdit(" + NullHandle(data[i].LabBookingDetailId) + ")' > <i class='material-icons'>edit</i></button>&nbsp;";
                    gridData = gridData + "<button type='button' rel='tooltip' class='btn btn-danger' title='Delete Lab Service : " + NullHandle(data[i].ZZServiceName) + "' onclick='return LabServicesDelete(" + NullHandle(data[i].LabBookingDetailId) +")'><i class='material-icons'>close</i></button>";
                    gridData = gridData +"</td>";
                }
                else {
                    gridData = gridData + "<td class='text - center'></td>";
                }
                //gridData = gridData + "<td style='display:none'><input type='hidden' id='hdnUOMPropId' value=" + NullHandle(data[i].UOMPropId) + " /> </td>";
                gridData = gridData + "</tr>";
            }

            $("#tbodyWS").html(gridData);


        }
        catch (e) {

        }
    }

    //////////////////////// Set Rate Unit ////////////////////////////////////////////////////////
    function SetRateUnit() {
        debugger;
        try {

            var varDate = "";
            //if (parseInt($("#BPId").val()) == 46 || parseInt($("#BPId").val()) == 91) {
            //    varDate = $("#Day").val().trim();
            //}
            //else {
                varDate = $("#Date").val().trim();
            //}
            var varServiceId = $("#ServiceType").val();
            var varTimeSlotId = 0;

            var strMSG = "";
            if (parseInt(varServiceId) == 0) {
                alert("Select Facility");
                return false;
            }

            if (varDate=="") {
                return false;
            }

            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {

                var data = '';
                var varServiceList = [];

                varServiceList[0] = NullHandle(varServiceId);

                var data = { 'intlstServiceId': varServiceList, 'intTimeSlotId': parseInt(varTimeSlotId), 'strWED': varDate };
                var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
            LoaderShow();
            $.ajax({
                url: '@Url.Action("BookingStatusGetByServiceIdTimeSlotPropIdWEFDate", "Home")',
                type: 'POST',
                dataType: 'json',
                async: true,
                data: dataWithAntiforgeryToken,
               // contentType: "application/json; charset=utf-8",
                success: function (dataBokkingStatus) {

                    LoaderHide();

                    if (dataBokkingStatus.StatusId != "99" && dataBokkingStatus.StatusId != "-99") {
                        var varBookingStatusList = dataBokkingStatus.BookingStatusList;
                        var varUsage = 0;
                        if (varBookingStatusList.length > 0) {
                            $("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
                                varUsage = $(this).val().trim();
                                if (varUsage == undefined || varUsage == "") {
                                    varUsage=0
                                }
                            });

                            $("#AddMoreTR").find("input[type='text'][id='Unit']").each(function () {
                                $(this).val(NullHandle(varBookingStatusList[0].UOM));
                            });
                            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                                $(this).val(NullHandle(varBookingStatusList[0].Rate));
                            });
                            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                                $(this).val(parseFloat(varBookingStatusList[0].Rate) * parseFloat(varUsage));
                            });
                            $("#AddMoreTR").find("input[type='hidden'][id='hdnUOMPropId']").each(function () {
                                $(this).val(NullHandle(varBookingStatusList[0].UOMPropId));
                            });
                        }
                    }
                    else {
                        alert(data.Status);
                    }
                },
                error: function (xhr) {

                    LoaderHide();
                    alert(xhr.responseText);
                }
            });
            }
        }
        catch (e) {
            LoaderHide();
            alert(xhr.responseText);
        }

    }

    ///////////////////////////// Lab Change Event //////////////////////////////////////////////////////
    function SetFacility() {
        debugger;
        try {
            var varLabType = 0;

            $("#AddMoreTR").find("select[id='LabType']").each(function () {
                varLabType=$(this).val();
            });
            $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                $(this).html("");
            });
            $("#AddMoreTR").find("select[id='VehicleType']").each(function () {
                $(this).html("");
            });
            //$("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
            //    $(this).val("");
            //});

            if (varLabType.toString() == '0') {
                alert("Select Lab");
            }
            else {
                debugger;
                var varServiceList = jQuery.grep(ServiceList, function (obj) {
                    return obj.ServiceName == varLabType;
                });

                if (varServiceList != undefined && varServiceList.length > 0) {
                    var gridData = gridData + "<option value='0'>- Select -</option>";
                    for (var i = 0; i < varServiceList.length; i++) {
                        gridData = gridData + "<option value='" + NullHandle(varServiceList[i].ServiceId) + "'>" + NullHandle(varServiceList[i].ServiceSpecification) + "</option>";
                    }
                    gridData = gridData + "</select>";

                    $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                        $(this).html(gridData);
                    });
                }
            }
        }
        catch (e) {

        }
    }

    ///////////////////////////// Facility  Change Event //////////////////////////////////////////////////////
    function SetVehicleComp() {
        try {
            debugger;
            var varServiceType = 0;
            $("#AddMoreTR").find("select[id='ServiceType']").each(function () {
                varServiceType = $(this).val();
            });
            $("#AddMoreTR").find("select[id='VehicleType']").each(function () {
                $(this).html("");
            });
            //$("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
            //    $(this).val("");
            //});

            if (varServiceType.toString() == '0') {
                alert("Select Facility");
            }
            else {
                //Commented by Reema because component which we added in previous screen not showing here and group concept not working properly
                //var varLablinkVorCList = jQuery.grep(LablinkVorCList, function (obj) {
                //    return obj.ServiceId == varServiceType;
                //});

               // if (varLablinkVorCList != undefined && varLablinkVorCList.length > 0) {
                    //var varVehicleCompList = jQuery.grep(VehicleCompList, function (obj) {
                    //    return obj.GroupId == varLablinkVorCList[0].GroupPropId;
                    //});
                    debugger;
                    //if (varVehicleCompList != undefined && varVehicleCompList.length > 0) {
                    //    var gridData = "";//gridData + "<option value='0'>- Select -</option>";
                    //    for (var i = 0; i < varVehicleCompList.length; i++) {
                    //        gridData = gridData + "<option value='" + NullHandle(varVehicleCompList[i].VehCompId) + "'>" + NullHandle(varVehicleCompList[i].VorC) + "</option>";
                    //    }
                    //    gridData = gridData + "</select>";

                    //    $("#AddMoreTR").find("select[id='VehicleType']").each(function () {
                    //        $(this).html(gridData);
                    //    });
                    //}
               // }

                if (VehicleCompList != undefined && VehicleCompList.length > 0) {
                        var gridData = "";//gridData + "<option value='0'>- Select -</option>";
                    for (var i = 0; i < VehicleCompList.length; i++) {
                        gridData = gridData + "<option value='" + NullHandle(VehicleCompList[i].VehCompId) + "'>" + NullHandle(VehicleCompList[i].VorC) + "</option>";
                        }
                        gridData = gridData + "</select>";

                        $("#AddMoreTR").find("select[id='VehicleType']").each(function () {
                            $(this).html(gridData);
                        });
                    }

                SetRateUnit();
            }
        }
        catch (e) {

        }
    }


    ///////////////////////////// Calculate Amount  //////////////////////////////////////////////////////
    function CalculateAmount() {
        try {
            var varUsage = 0;
            var varRate = 0;

            $("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
                varUsage = $(this).val().trim();
                if (varUsage == undefined || varUsage == "") {
                    varUsage = 0
                }
            });

            $("#AddMoreTR").find("input[type='text'][id='Rate']").each(function () {
                varRate = $(this).val().trim();
                if (varRate == undefined || varRate == "") {
                    varRate = 0
                }
            });

            $("#AddMoreTR").find("input[type='text'][id='Amount']").each(function () {
                $(this).val(parseFloat(varRate) * parseFloat(varUsage));
            });


        }
        catch (e) {

        }
    }

    ///////////////////////////// Set Button Visibility  //////////////////////////////////////////////////////
    function SetButtonVisibility() {
        try {
            if (parseInt($("#StatusPropId").val()) == 40 && parseInt($("#RFQId").val()) == 0 && (parseInt($("#WorkFlowId").val()) == 6 || parseInt($("#WorkFlowId").val()) == 57 || parseInt($("#WorkFlowId").val()) == 29 || parseInt($("#WorkFlowId").val()) == 36 || parseInt($("#WorkFlowId").val()) == 38)) {
                $("#btnAdd").attr('disabled', false);
            }
            else {
                $("#btnAdd").attr('disabled', true);
            }
        }
        catch (e) {

        }
    }


    ///////////////////////////// Masking  //////////////////////////////////////////////////////
    function MaskControls() {
        try {
            (function ($) {
                $(function () {

                    $("#AddMoreTR").find("input[type='text'][id='Usage']").each(function () {
                        $(this).attr('onkeypress', 'return CheckIsNumeric(event,this);');
                    });

                });
            })(jQuery);
        }
        catch (e) {

        }
    }

    function ToDate(strdate) {
        var parts = strdate.split("-");
        if (parts.length < 3) {
            parts = strdate.split("/");
        }
        return new Date(parts[2], parts[1] - 1, parts[0])
    }

    //function WorkshopBookingDetailCopy(WorkshopBookingDetailId) {
    //    try {
    //        $("#hiddenWorkshopBookingDetailId").val(WorkshopBookingDetailId);
    //        $("#PopupFromDateToDate").modal("show");
    //    } catch { }

    //}

    function RepeatRowLab() {
        debugger
        if ($("#DocId").val().trim() == "" || $("#DocId").val().trim() == undefined
            || $("#DocId").val().trim() == null) {
            alert("Booking Details not found.");

        } else if ($("#hiddenLabBookingDetailId").val().trim() == ""
            || $("#hiddenLabBookingDetailId").val().trim() == null
            || $("#hiddenLabBookingDetailId").val().trim() == undefined
            || $("#hiddenLabBookingDetailId").val().trim() == 0
        ) {
            alert("Please select workshop detail row");
        } else {

            $("#FromDate").val("");
            $("#ToDate").val("");
            $("#PopupFromDateToDate").modal("show");
        }
    }

    var strFromDate = "";
    function SelectRow(varZZDate, RowId, varWorkshopBookingDetailId, varCaption) {
        try {
            debugger;
            strFromDate = varZZDate;
            $("#hiddenLabBookingDetailId").val(varWorkshopBookingDetailId);
            $("#txtTrackName").text(varCaption);
            ColourRowId = RowId;
            changeColorTrack(RowId);
        }
        catch (e) {

        }
    }

    function SetDateMMDDYYYY(dateStr) {
        debugger;
        var strDate
        var Split = dateStr.split("-");
        var varDD = Split[0];
        var varMM = Split[1];
        var varYY = Split[2];
        var now = new Date(varMM + '-' + varDD + '-' + varYY);
        var Day = now.getDate()
        var Month = (now.getMonth() + 1)
        var Year = now.getFullYear()
        if (Day < 10) {
            Day = "0" + Day;
        }
        if (Month < 10) {
            Month = "0" + Month;
        }
        strDate = Month + "-" + Day + "-" + Year;
        return strDate;
    }

    function changeColorTrack(id) {
        debugger
        $("#trTrack_" + Holdid + "").removeClass('highlighted');
        $("#trTrack_" + id + "").addClass('highlighted');
        Holdid = id;
    }

    function GenerateRepeatRowLab() {
        try {
            debugger;
            var varFromDate = $("#FromDate").val().trim();
            var varToDate = $("#ToDate").val().trim();
            var varLabBookingDetailId = $("#hiddenLabBookingDetailId").val();
            var varBookingId = $("#DocId").val().trim();

            var Fromdate = new Date(SetDateMMDDYYYY($("#FromDate").val().trim()));
            var Todate = new Date(SetDateMMDDYYYY($("#ToDate").val().trim()));

            var FromdateVal = new Date(SetDateMMDDYYYY(strFromDate));
            var strMSG = "";
            if (Fromdate <= FromdateVal) {
                strMSG = strMSG + 'From Date should be greater than selected date  \n</br>'
            } else
                if (varFromDate == "") {
                    strMSG = strMSG + 'From Date  \n</br>'
                }
                else if (varToDate == "") {
                    strMSG = strMSG + 'To Date  \n</br>'
                }

                else
                    if (Todate < Fromdate) {
                        strMSG += "<br /> \n From date should not be greater than To date. \n";
                    }

            if (strMSG != '') {
                alert("Please enter data for Mandatory fields  \n</br>" + strMSG);
                return false;
            }
            else {

                $("#btnGenerateRepeatRowLab").hide();
                LoaderShow();
                var model={ };
                model.IntOne = varLabBookingDetailId;
                model.IntTwo = varBookingId;
                model.StrOne = varFromDate;
                model.StrTwo = varToDate;

                 var data = { 'model': model};
                 var dataWithAntiforgeryToken = $.extend(data, { "__RequestVerificationToken": $("input[name=__RequestVerificationToken]").val() });
                $.ajax({
                    url: '@Url.Action("LabBookingDetailInsertFrontRepeatRow", "Home")',
                    type: 'POST',
                    dataType: 'json',
                    async: true,
                    data: dataWithAntiforgeryToken,
                    success: function (data) {
                        debugger;
                        LoaderHide();
                        if (data.StatusId != "99" && data.StatusId != "-99") {
                            $("#PopupFromDateToDate").modal("hide");
                            LabServicesList = data.WorkshopBookingDetailList;
                            BindWSData(LabServicesList);
                        }
                        $("#btnGenerateRepeatRowLab").show();
                        alert(data.Status);
                    },
                    error: function (xhr) {
                        $("#btnGenerateRepeatRowLab").show();
                        LoaderHide();
                        alert(xhr.responseText);
                    }
                });
            }
        }
        catch (e) {

            LoaderHide();
            $("#btnRepeatRow").show();
            alert(e.message);
            return false;
        }
    }

    $(document).ready(function () {
        MaskControls();
        SetButtonVisibility();
        LoadLabServicesInfo();
    });

</script>